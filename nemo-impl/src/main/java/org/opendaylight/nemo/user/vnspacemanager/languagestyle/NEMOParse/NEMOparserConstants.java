/*
 * Copyright (c) 2015 Huawei, Inc. and others. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */
/* Generated By:JavaCC: Do not edit this line. NEMOparserConstants.java */
package org.opendaylight.nemo.user.vnspacemanager.languagestyle.NEMOParse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NEMOparserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COLON = 5;
  /** RegularExpression Id. */
  int COMMA = 6;
  /** RegularExpression Id. */
  int SEMICOLON = 7;
  /** RegularExpression Id. */
  int LPAREN = 8;
  /** RegularExpression Id. */
  int RPAREN = 9;
  /** RegularExpression Id. */
  int LBRACKET = 10;
  /** RegularExpression Id. */
  int RBRACKET = 11;
  /** RegularExpression Id. */
  int AND = 12;
  /** RegularExpression Id. */
  int OR = 13;
  /** RegularExpression Id. */
  int NOT = 14;
  /** RegularExpression Id. */
  int EQUAL = 15;
  /** RegularExpression Id. */
  int GTHAN = 16;
  /** RegularExpression Id. */
  int LTHAN = 17;
  /** RegularExpression Id. */
  int NLTHAN = 18;
  /** RegularExpression Id. */
  int NMTHAN = 19;
  /** RegularExpression Id. */
  int UNDERSCORE = 20;
  /** RegularExpression Id. */
  int JOINER = 21;
  /** RegularExpression Id. */
  int FSLASH = 22;
  /** RegularExpression Id. */
  int DOT = 23;
  /** RegularExpression Id. */
  int CREATE = 24;
  /** RegularExpression Id. */
  int IMPORT = 25;
  /** RegularExpression Id. */
  int UPDATE = 26;
  /** RegularExpression Id. */
  int DELETE = 27;
  /** RegularExpression Id. */
  int NODE = 28;
  /** RegularExpression Id. */
  int TYPE = 29;
  /** RegularExpression Id. */
  int CONTAIN = 30;
  /** RegularExpression Id. */
  int PROPERTY = 31;
  /** RegularExpression Id. */
  int CONNECTION = 32;
  /** RegularExpression Id. */
  int ENDNODES = 33;
  /** RegularExpression Id. */
  int FLOW = 34;
  /** RegularExpression Id. */
  int MATCH = 35;
  /** RegularExpression Id. */
  int OPERATION = 36;
  /** RegularExpression Id. */
  int TARGET = 37;
  /** RegularExpression Id. */
  int CONDITION = 38;
  /** RegularExpression Id. */
  int ACTION = 39;
  /** RegularExpression Id. */
  int QUERY = 40;
  /** RegularExpression Id. */
  int FROM = 41;
  /** RegularExpression Id. */
  int PRIORITY = 42;
  /** RegularExpression Id. */
  int TRUE = 43;
  /** RegularExpression Id. */
  int FALSE = 44;
  /** RegularExpression Id. */
  int TRANSACTION = 45;
  /** RegularExpression Id. */
  int BEGIN = 46;
  /** RegularExpression Id. */
  int END = 47;
  /** RegularExpression Id. */
  int UNUMBER = 48;
  /** RegularExpression Id. */
  int ID = 49;
  /** RegularExpression Id. */
  int DIGIT = 50;
  /** RegularExpression Id. */
  int LETTER = 51;
  /** RegularExpression Id. */
  int ETHPREF = 52;
  /** RegularExpression Id. */
  int IPV4PREF = 53;
  /** RegularExpression Id. */
  int ETHADDR = 54;
  /** RegularExpression Id. */
  int IPV4ADDR = 55;
  /** RegularExpression Id. */
  int UBYTE = 56;
  /** RegularExpression Id. */
  int HEXDIGIT = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\":\"",
    "\",\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"==\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"_\"",
    "\"-\"",
    "\"/\"",
    "\".\"",
    "\"CREATE\"",
    "\"IMPORT\"",
    "\"UPDATE\"",
    "\"DELETE\"",
    "\"Node\"",
    "\"Type\"",
    "\"Contain\"",
    "\"Property\"",
    "\"Connection\"",
    "\"Endnodes\"",
    "\"Flow\"",
    "\"Match\"",
    "\"Operation\"",
    "\"Target\"",
    "\"Condition\"",
    "\"Action\"",
    "\"Query\"",
    "\"From\"",
    "\"Priority\"",
    "\"true\"",
    "\"false\"",
    "\"Transaction\"",
    "\"Begin\"",
    "\"End\"",
    "<UNUMBER>",
    "<ID>",
    "<DIGIT>",
    "<LETTER>",
    "<ETHPREF>",
    "<IPV4PREF>",
    "<ETHADDR>",
    "<IPV4ADDR>",
    "<UBYTE>",
    "<HEXDIGIT>",
  };

}
